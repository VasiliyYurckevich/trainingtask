import com.bmuschko.gradle.tomcat.tasks.TomcatRun

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.hsqldb:hsqldb:2.5.1"
    }
}

plugins {
    id 'java'
    id 'war'
    id "com.bmuschko.tomcat" version "2.7.0"
}
group 'com.qulix.yurkevichvv.trainingtask'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.0'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.forkOptions.jvmArgs.addAll( ['--add-opens', 'jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED'] )
}

dependencies {
    implementation project(':com.qulix.yurkevichvv.trainingtask.model')
    compileOnly 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'org.hsqldb:hsqldb:2.7.0'
    implementation 'org.codehaus.groovy:groovy-all:3.0.12'
    compileOnly('javax:javaee-web-api:8.0.1')
    implementation 'org.apache.wicket:wicket:9.9.1'

    implementation group: 'jstl', name: 'jstl', version: '1.2'
    implementation group: 'taglibs', name: 'standard', version: '1.1.2'
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    def tomcatVersion = '9.0.56'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:9.0.0.M6",
            "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
}

test {
    useJUnitPlatform()
}

apply plugin: 'checkstyle'

checkstyle {
    toolVersion = '8.14'
    configFile = rootProject.file('checkstyle/checkstyle.xml')
}

task Checkstyle(type: Checkstyle) {
    source 'src/main/java'
    include '**/*.java'

    classpath = getProject().files()
}

tomcat {
    httpProtocol = 'org.apache.coyote.http11.Http11Nio2Protocol'
    ajpProtocol = 'org.apache.coyote.ajp.Http11Nio2Protocol'
}

task startServer(type: TomcatRun) {
    httpPort = 8080
    httpsPort = 8080
}

tomcatRun.contextPath = '/servlets/'
import com.bmuschko.gradle.tomcat.tasks.TomcatRun

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.hsqldb:hsqldb:${gradle.hsqldbVersion}"
    }
}

plugins {
    id 'java'
    id 'war'
    id "com.bmuschko.tomcat" version "2.7.0"
}
group 'com.qulix.yurkevichvv.trainingtask'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.8.2'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_9
    targetCompatibility = JavaVersion.VERSION_1_9
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.forkOptions.jvmArgs.addAll( ['--add-opens', 'jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED'] )
}

dependencies {
    implementation project(':com.qulix.yurkevichvv.trainingtask.api')
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'org.hsqldb:hsqldb:2.5.1'
    implementation 'org.codehaus.groovy:groovy-all:3.0.11'
    compileOnly('javax:javaee-web-api:8.0.1')
    implementation 'org.apache.wicket:wicket:9.9.1'
    implementation 'org.apache.wicket:wicket-core:9.9.1'
    implementation 'org.apache.wicket:wicket-extensions:9.9.1'
    testImplementation 'junit:junit:4.11'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    def tomcatVersion = '9.0.56'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:9.0.0.M6",
            "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
}

test {
    useJUnitPlatform()
}

apply plugin: 'checkstyle'

checkstyle {
    toolVersion = '8.14'
    configFile = rootProject.file('checkstyle/checkstyle.xml')
}

task Checkstyle(type: Checkstyle) {
    source 'src/main/java'
    include '**/*.java'

    classpath = getProject().files()
}

sourceSets {
    main {
        resources {
            srcDirs += ['src/main/java','src/main/webapp']
            includes = ["**/*.html","**/*.css"]
        }
    }
}

tomcat {
    httpProtocol = 'org.apache.coyote.http11.Http11Nio2Protocol'
    ajpProtocol = 'org.apache.coyote.http11.Http11Nio2Protocol'
}

task startWicketServer(type: TomcatRun) {
    httpPort = 8090
    httpsPort = 8090
}

tomcatRun.contextPath = '/wicket/'

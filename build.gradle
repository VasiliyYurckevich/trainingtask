buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "com.bmuschko:gradle-cargo-plugin:2.9.0"
    }
}

plugins {
    id "java"
}

ext {
    tomcatHttpPort = 9090
}

apply plugin: "java"
apply plugin: "com.bmuschko.cargo"

group "com.qulix.yurkevichvv"
version "1.0-SNAPSHOT"

repositories {
    mavenCentral()
}

dependencies {
    compileOnly "javax.servlet:javax.servlet-api:4.0.1"
    runtimeOnly "org.hsqldb:hsqldb:2.5.1"
    compileOnly("javax:javaee-web-api:8.0.1")
    runtimeOnly group: "jstl", name: "jstl", version: "1.2"

    def cargoVersion = "1.9.10"
    cargo "org.codehaus.cargo:cargo-core-uberjar:${cargoVersion}",
            "org.codehaus.cargo:cargo-licensed-dtds:${cargoVersion}",
            "org.codehaus.cargo:cargo-ant:${cargoVersion}"

}


test {
    useJUnitPlatform()
}

sourceSets {
    main {
        resources {
            srcDirs += ["src/main/java","src/main/webapp"]
            includes = ["**/*.html","**/*.css"]
        }
    }
}

cargo {
    containerId = "tomcat9x"
    port = tomcatHttpPort

    deployable {
        context = "servlets"
        file = file("${rootDir}/com.qulix.yurkevichvv.trainingtask.servlets/build/libs/com.qulix.yurkevichvv.trainingtask.servlets-1.0-SNAPSHOT.war")
    }

    deployable {
        context = "wicket"
        file = file("${rootDir}/com.qulix.yurkevichvv.trainingtask.wicket/build/libs/com.qulix.yurkevichvv.trainingtask.wicket-1.0-SNAPSHOT.war")
    }

    local{
        installer {
            installUrl = "https://archive.apache.org/dist/tomcat/tomcat-9/v9.0.59/bin/apache-tomcat-9.0.59.zip"
            downloadDir = file("download")
            extractDir = file("extract")
        }
        rmiPort = 1234
    }
}

task startServer(type: com.bmuschko.gradle.cargo.tasks.local.CargoRunLocal) {
    dependsOn cargoConfigureLocal
    finalizedBy {
        println "http://localhost:${project.ext.tomcatHttpPort}/servlets"
        println "http://localhost:${project.ext.tomcatHttpPort}/wicket"
    }
}

task stopServer(type: com.bmuschko.gradle.cargo.tasks.local.CargoStopLocal) {
}

subprojects {
    apply plugin: "java"
    apply plugin: "checkstyle"

    checkstyle {
        toolVersion = "8.14"
        configFile = rootProject.file("checkstyle/checkstyle.xml")
    }

    task checkstyle(type: Checkstyle) {
        source "src/main/java"
        include "**/*.java"

        classpath = getProject().files()
    }

    sourceSets {
        main {
            resources {
                srcDirs += ["src/main/java", "src/main/webapp"]
                includes = ["**/*.html", "**/*.css", "**/*.properties"]
            }
        }
    }

    build{
        doLast {
            checkstyle
        }
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
}

Set<Project> webProjects() {
    subprojects.findAll { subproject -> subproject.plugins.hasPlugin("war")}
}

gradle.projectsEvaluated {
    configure(webProjects()) {

        group "com.qulix.yurkevichvv.trainingtask"
        version "1.0-SNAPSHOT"

        apply plugin: "com.bmuschko.cargo"

        dependencies {
            implementation project(":com.qulix.yurkevichvv.trainingtask.model")
            compileOnly "javax.servlet:javax.servlet-api:4.0.1"
            compileOnly "javax:javaee-web-api:8.0.1"

            testRuntimeOnly "org.junit.jupiter:junit-jupiter-api:5.9.0"
            testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.9.0"

            def cargoVersion = "1.9.10"
            cargo "org.codehaus.cargo:cargo-core-uberjar:${cargoVersion}",
                    "org.codehaus.cargo:cargo-licensed-dtds:${cargoVersion}",
                    "org.codehaus.cargo:cargo-ant:${cargoVersion}"
        }

        cargo {
            containerId = "tomcat9x"
            port = rootProject.ext.tomcatHttpPort

            deployable {
                file = file("${buildDir}/libs/${project.name}-${project.version}.war")
                context = "${project.ext.context}"
            }

            local {
                installer {
                    installUrl = "https://archive.apache.org/dist/tomcat/tomcat-9/v9.0.59/bin/apache-tomcat-9.0.59.zip"
                    downloadDir = file("${buildDir}/download")
                    extractDir = file("${buildDir}/extract")
                }
                containerProperties {
                    property "cargo.tomcat.ajp.port", project.ext.tomcatAjpPort
                }
                homeDir = file("${rootDir}/extract/apache-tomcat-9.0.59/apache-tomcat-9.0.59/1")
                rmiPort = project.ext.rmiPort
            }
        }

        task startServer(dependsOn: cargoStartLocal){
            doLast {
                println "http://localhost:${rootProject.ext.tomcatHttpPort}/${project.ext.context}"
            }
        }
    }
}
buildscript {
    repositories {
        mavenCentral()
    }
    ext {
        hsqldbVersion = "2.5.1"

    }
    dependencies {
        classpath "org.hsqldb:hsqldb:${hsqldbVersion}"
        classpath "com.bmuschko:gradle-cargo-plugin:2.9.0"
    }
}

plugins {
    id "java"
}

apply plugin: "java"
apply plugin: "com.bmuschko.cargo"

repositories {
    mavenCentral()
}

dependencies {
    compileOnly "javax.servlet:javax.servlet-api:4.0.1"
    implementation "org.hsqldb:hsqldb:2.5.1"
    compileOnly("javax:javaee-web-api:8.0.1")
    implementation group: "jstl", name: "jstl", version: "1.2"

    def cargoVersion = "1.9.8"
    cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
            "org.codehaus.cargo:cargo-licensed-dtds:$cargoVersion",
            "org.codehaus.cargo:cargo-ant:$cargoVersion"
}


test {
    useJUnitPlatform()
}

apply from: "database.gradle"

sourceSets {
    main {
        resources {
            srcDirs += ["src/main/java","src/main/webapp"]
            includes = ["**/*.html","**/*.css"]
        }
    }
}

cargo {
    containerId = "tomcat9x"

    port = 9090
    deployable {
        context = "servlets"
        file = file("${rootDir}/com.qulix.yurkevichvv.trainingtask.servlets/build/libs/com.qulix.yurkevichvv.trainingtask.servlets-1.0-SNAPSHOT.war")
    }

    deployable {
        context = "wicket"
        file = file("${rootDir}/com.qulix.yurkevichvv.trainingtask.wicket/build/libs/com.qulix.yurkevichvv.trainingtask.wicket-1.0-SNAPSHOT.war")
    }

    local{
        installer {
            installUrl = "https://archive.apache.org/dist/tomcat/tomcat-9/v9.0.59/bin/apache-tomcat-9.0.59.zip"
            downloadDir = file("download")
            extractDir = file("extract")
        }
        rmiPort = 1234
    }
}

subprojects {
    apply plugin: "java"
    apply plugin: "checkstyle"

    group "com.qulix.yurkevichvv"
    version "1.0-SNAPSHOT"

    build{
        doLast {
            Checkstyle
        }
    }

    checkstyle {
        toolVersion = "8.14"
        configFile = rootProject.file("checkstyle/checkstyle.xml")
    }

    task Checkstyle(type: Checkstyle) {
        source "src/main/java"
        include "**/*.java"

        classpath = getProject().files()
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
}

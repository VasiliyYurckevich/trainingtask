import com.bmuschko.gradle.cargo.tasks.local.CargoRunLocal
import com.bmuschko.gradle.cargo.tasks.local.CargoStopLocal

plugins {
    id "com.bmuschko.cargo" version "2.9.0"
}

ext {
    tomcatHttpPort = 9090
}

allprojects {
    group "com.qulix.yurkevichvv.trainingtask"
    version "1.0-SNAPSHOT"

    repositories {
        mavenCentral()
    }
}

configurations {
    tomcat
}

dependencies {
    def cargoVersion = "1.9.10"
    cargo "org.codehaus.cargo:cargo-core-uberjar:${cargoVersion}",
            "org.codehaus.cargo:cargo-licensed-dtds:${cargoVersion}",
            "org.codehaus.cargo:cargo-ant:${cargoVersion}"

    tomcat "org.apache.tomcat:tomcat:9.0.59@zip"
}

cargo {
    containerId = "tomcat9x"
    port = tomcatHttpPort

    deployable {
        context = "servlets"
        file = file("${rootDir}/${group}.${context}/build/libs/${group}.${context}-${version}.war")
    }

    deployable {
        context = "wicket"
        file = file("${rootDir}//${group}.${context}/build/libs/${group}.${context}-${version}.war")

    }

    local {
        installer {
            installConfiguration = configurations.tomcat
            downloadDir = file("${buildDir}/tomcat")
            extractDir = file("${buildDir}/tomcat")
        }
    }
}

subprojects {
    apply plugin: "java"
    apply plugin: "checkstyle"

    checkstyle {
        toolVersion = "8.14"
        configFile = rootProject.file("checkstyle/checkstyle.xml")
    }

    tasks.register('checkstyle', Checkstyle) {
        source "src/main/java"
        include "**/*.java"

        classpath = getProject().files()
    }

    build {
        doLast {
            checkstyle
        }
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    tasks.withType(JavaCompile).tap {
        configureEach {
            options.encoding = "UTF-8"
        }
    }
}

Set<Project> webProjects() {
    subprojects.findAll { subproject -> subproject.plugins.hasPlugin("war")}
}

gradle.projectsEvaluated {
    configure(webProjects()) {
        dependencies {
            implementation project(":com.qulix.yurkevichvv.trainingtask.model")
            compileOnly "javax.servlet:javax.servlet-api:4.0.1"
            compileOnly "javax:javaee-web-api:8.0.1"
        }
    }
}

tasks.register('startServer', CargoRunLocal) {
    dependsOn cargoConfigureLocal
    finalizedBy {
        println "http://localhost:${project.ext.tomcatHttpPort}/servlets"
        println "http://localhost:${project.ext.tomcatHttpPort}/wicket"
    }
}

tasks.register('stopServer', CargoStopLocal) {
}
